{"version":3,"sources":["components/TimerButton/TimerButton.tsx","components/Timer/Timer.tsx","components/App/App.tsx","index.tsx"],"names":["TimerButton","buttonAction","buttonValue","className","onClick","toLowerCase","Timer","props","myInterval","stopTimer","console","log","clearInterval","setState","isOn","render","state","minutes","seconds","startTimer","resetTimer","bind","this","setInterval","alert","Component","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"wNAkBeA,EAdK,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,YAAjB,OAClB,yBAAKC,UAAU,mBAAmBC,QAAS,kBAAMH,MAC/C,4BACEE,UAAS,UAAKD,EAAYG,cAAjB,WACRH,KC8EQI,E,kDA1Eb,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IAFRC,gBACwB,IA0CxBC,UAAY,WACVC,QAAQC,IAAI,kBACZC,cAAc,EAAKJ,YACnB,EAAKK,SAAS,CAAEC,MAAM,KA7CA,EAyDxBC,OAAS,WAAO,IAAD,EACgB,EAAKC,MAA1BC,EADK,EACLA,QAASC,EADJ,EACIA,QACjB,OACE,yBAAKf,UAAU,mBACb,yBAAKA,UAAU,gBACZc,EADH,IACaC,EAAU,GAAV,WAAmBA,GAAYA,GAE5C,yBAAKf,UAAU,0BACb,kBAAC,EAAD,CAAaF,aAAc,EAAKkB,WAAYjB,YAAa,UACzD,kBAAC,EAAD,CAAaD,aAAc,EAAKQ,UAAWP,YAAa,SACxD,kBAAC,EAAD,CAAaD,aAAc,EAAKmB,WAAYlB,YAAa,aAjE/D,EAAKc,MAAQ,CACXC,QAAS,GACTC,QAAS,GACTJ,MAAM,GAER,EAAKN,WAAaD,EAClB,EAAKY,WAAa,EAAKA,WAAWE,KAAhB,gBAClB,EAAKD,WAAa,EAAKA,WAAWC,KAAhB,gBATI,E,yDAYV,IAAD,OACXX,QAAQC,IAAI,oBACY,IAApBW,KAAKN,MAAMF,OAIfQ,KAAKd,WAAae,aAAY,WAAO,IAAD,EACL,EAAKP,MAA1BE,EAD0B,EAC1BA,QAASD,EADiB,EACjBA,QAEbC,EAAU,GACZ,EAAKL,UAAS,kBAAkB,CAC9BK,QADY,EAAGA,QACI,MAGP,IAAZA,IACc,IAAZD,GACFO,MAAM,aACN,EAAKJ,aACLR,cAAc,EAAKJ,aAEnB,EAAKK,UAAS,kBAAkB,CAC9BI,QADY,EAAGA,QACI,EACnBC,QAAS,UAId,KACHI,KAAKT,SAAS,CAAEC,MAAM,O,mCAUtBJ,QAAQC,IAAI,oBACZW,KAAKb,YACLa,KAAKT,SAAS,CACZI,QAAS,GACTC,QAAS,S,GAvDKO,aCELC,EARH,WACV,OACE,yBAAKvB,UAAU,iBACb,kBAAC,EAAD,QCFNwB,IAASZ,OACP,kBAAC,IAAMa,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.c8c38369.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import './TimerButton.css';\r\n\r\nconst TimerButton = ({ buttonAction, buttonValue }: any) => (\r\n  <div className=\"button-container\" onClick={() => buttonAction()}>\r\n    <button\r\n      className={`${buttonValue.toLowerCase()}-timer`}>\r\n      {buttonValue}\r\n    </button>\r\n  </div>\r\n);\r\n\r\nTimerButton.propTypes = {\r\n  buttonAction: PropTypes.func.isRequired,\r\n  buttonValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TimerButton;\r\n","import React, { Component } from \"react\";\r\nimport TimerButton from \"../TimerButton/TimerButton\";\r\n//import \"./Timer.css\";\r\n\r\ntype stateTypes = {\r\n  minutes: number;\r\n  seconds: number;\r\n  isOn: boolean;\r\n};\r\n\r\nclass Timer extends Component<{}, stateTypes> {\r\n  myInterval: ReturnType<typeof setInterval>;\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      minutes: 59,\r\n      seconds: 59,\r\n      isOn: false,\r\n    };\r\n    this.myInterval = props;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.resetTimer = this.resetTimer.bind(this);\r\n  }\r\n\r\n  startTimer() {\r\n    console.log(\"Starting timer.\");\r\n    if (this.state.isOn === true) {\r\n      return;\r\n    }\r\n\r\n    this.myInterval = setInterval(() => {\r\n      const { seconds, minutes } = this.state;\r\n\r\n      if (seconds > 0) {\r\n        this.setState(({ seconds }) => ({\r\n          seconds: seconds - 1,\r\n        }));\r\n      }\r\n      if (seconds === 0) {\r\n        if (minutes === 0) {\r\n          alert(`Time's Up`);\r\n          this.resetTimer();\r\n          clearInterval(this.myInterval);\r\n        } else {\r\n          this.setState(({ minutes }) => ({\r\n            minutes: minutes - 1,\r\n            seconds: 59,\r\n          }));\r\n        }\r\n      }\r\n    }, 1000);\r\n    this.setState({ isOn: true });\r\n  }\r\n\r\n  stopTimer = () => {\r\n    console.log(\"Stoping timer.\");\r\n    clearInterval(this.myInterval);\r\n    this.setState({ isOn: false });\r\n  };\r\n\r\n  resetTimer() {\r\n    console.log(\"Resetting timer.\");\r\n    this.stopTimer();\r\n    this.setState({\r\n      minutes: 59,\r\n      seconds: 59,\r\n    });\r\n  }\r\n\r\n  render = () => {\r\n    const { minutes, seconds } = this.state;\r\n    return (\r\n      <div className=\"timer-container\">\r\n        <div className=\"time-display\">\r\n          {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\r\n        </div>\r\n        <div className=\"timer-button-container\">\r\n          <TimerButton buttonAction={this.startTimer} buttonValue={\"Start\"} />\r\n          <TimerButton buttonAction={this.stopTimer} buttonValue={\"Stop\"} />\r\n          <TimerButton buttonAction={this.resetTimer} buttonValue={\"Reset\"} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport Timer from \"../Timer/Timer\";\r\n//import \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Timer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}